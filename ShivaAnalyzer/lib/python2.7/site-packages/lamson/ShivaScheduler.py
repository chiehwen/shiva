#! /usr/bin/python
"""
Schedules a job to reset individual counters of relayed mails to 0. This would make sure each spammer finds spamPot relaying everyday
"""
import datetime
import os, time, sys
from apscheduler.scheduler import Scheduler
#import spamConfig
import MySQLdb as mdb

# Start the scheduler
sched = Scheduler()
sched.start()

conn = None

def dbConnect():
  """
  DB connectionn parameters
  """
  #conn = None
  
  #now = datetime.datetime.now()
     
  try:
    conn = mdb.connect (host = "192.168.7.53",
			user = "root",
			passwd = "password",
			db = "spamPot09252012",
			charset='utf8',
			use_unicode = True)
    conn.autocommit(True)						# This is needed for storage engine InnoDB (for foreign keys). It won't save values in tables until commited
    cursor = conn.cursor()
    return cursor
    
  except mdb.Error, e:
    print("[-] Error - %d: %s" % (e.args[0], e.args[1]))
    sys.exit(1)


def reset_counter():
  exeSql = dbConnect()
  
  counters1 = "UPDATE relay SET relay.relayCounter = 0"
  #counters1 = "UPDATE spamPot.spam_relay SET spamPot.spam_relay.relayCounter = 0"
  #counters2 = "UPDATE spamPot.spam_relay SET spamPot.spam_relay.totalRelayed = spamPot.spam_relay.totalRelayed + 1 WHERE spamPot.spam_relay.from ='"+ mailFields['from']+"' AND spamPot.spam_relay.subject ='"+ mailFields['subject']+"'"
      
  try:
    exeSql.execute(counters1)
    print "Reseted counters successfully at (1 hours interval): ", datetime.datetime.now()
    #print "Reseted counters successfully"
    
    #exeSql.execute(counters2)
  except mdb.Error, e:
    print("[-] Error (spamScheduler - counters) - %d: %s" % (e.args[0], e.args[1]))
    sys.exit()
  ''' 
  script = """
  df -h
  echo
  echo "Wiping out receiver logs"
  ls -l /root/Desktop/LamsonHoneyMail/MyMailServer/logs/
  > /root/Desktop/LamsonHoneyMail/MyMailServer/logs/lamson.err
  > /root/Desktop/LamsonHoneyMail/MyMailServer/logs/lamson.log
  > /root/Desktop/LamsonHoneyMail/MyMailServer/logs/lamson.out
  > /root/Desktop/LamsonHoneyMail/MyMailServer/logs/logger.log
  > /root/Desktop/LamsonHoneyMail/MyMailServer/debug.txt
  rm /root/Desktop/LamsonHoneyMail/MyMailServer/run/undeliverable/new/*.* 
  echo
  ls -l /root/Desktop/LamsonHoneyMail/MyMailServer/logs/
  echo "Wiping out analyser logs"
  ls -l /root/Desktop/LamsonAnalyser/lamson-analyser/logs/
  > /root/Desktop/LamsonAnalyser/lamson-analyser/logs/lamson.err
  > /root/Desktop/LamsonAnalyser/lamson-analyser/logs/lamson.log
  > /root/Desktop/LamsonAnalyser/lamson-analyser/logs/lamson.out
  > /root/Desktop/LamsonAnalyser/lamson-analyser/logs/logger.log
  echo
  ls -l /root/Desktop/LamsonAnalyser/lamson-analyser/logs/
  echo
  echo
  echo """

  os.system("bash -c '%s'" % script)
  '''  
# Schedule job_function to be called every two hours
#sched.add_interval_job(job_function, hours=2)

# The same as before, but start after a certain time point
#sched = Scheduler()
if __name__ == '__main__':
  print "spamPot spamScheduler started at (1 hour interval): ", datetime.datetime.now()
  sched.add_interval_job(reset_counter, hours=1)#, start_date='2012-06-15 12:45:00')

  while 1:
    time.sleep(1000)